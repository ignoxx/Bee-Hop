<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>parController</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//enable double click
mouse_doubleclick_init();

game_score = 0;
game_state = game.ready;
game_score_reached = false;

pup_jump = 3;
num_of_objs = 75;
hide_objs = false;

// draw score values
score_x_default = 5;
score_x = score_x_default;
score_y = 10;
_score = true;
score_scale = 2;
score_halign = fa_left;
score_font = fnt_jchtml5;

// highscore value
hscore_alpha = 0;
hscore_scale = 1;

//ad break =)
ad_break = false;

scr_create_objs();

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ad break is over =(
jc_ad_hide();
instance_activate_all();
ad_break = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 1;
scr_render();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Delta time
global._delta_time = room_speed / 1000000.0 * delta_time;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game state
switch(game_state)
{
    case game.running:        
        if(!oBee.is_dead){
            game_score += 1;
        }
        
        //Control game speed
        var base_spd = -5;
        var spd = base_speed;
        if(game_score &gt; 0){
            spd = base_spd - (game_score/1000);
            global._speed = spd * global._delta_time;
        }
        break;
    
    case game.over:
        global._speed = 0;
        if(!hide_objs){
            // play sound that we loose
            _audio_play_sound(snd_loose);
            
            hide_objs = true;
            with(parCollider) alarm[0] = room_speed;
            
            if(game_score &gt; global._game_high_score){
                global._game_high_score = game_score;
                game_score_reached = true;
                
                // Submit the stat to GameAnalytics
                ga_addProgressionEvent(GA_PROGRESSIONSTATUS_COMPLETE, "main", game_score);
                
                // Submit the stat to Kongregate
                if ( kongGetAPI() != -1 ) {
                  kongSubmitStat( "Score", game_score );
                }
                
            }
        }
        
        //retry button
        if(!instance_exists(oButtonRetry)){
            with(instance_create(room_width/2 + 96 + 20, -96, oButtonRetry)){
                TweenFire(id, EaseOutBounce, TWEEN_MODE_ONCE, false, 60, 120, y__, y, room_height - 200);
            }
        }
        
        //home button
        if(!instance_exists(oButtonHome)){
            with(instance_create(room_width/2 - 96 - 20, -96, oButtonHome)){
                TweenFire(id, EaseOutBounce, TWEEN_MODE_ONCE, false, 70, 120, y__, y, room_height - 200);
            }
        }
        
        //Move score
        if(_score){
            _score = false;
            score_scale = score_scale/2;
            score_halign = fa_center;
            score_font = fnt_jchtml5_2;
            score_x = score_x_default + string_width("Score: " + game_score);
            
            if(!global.DEVICE_IS_TOUCH){
                score_scale = score_scale * 2;
            }
            
            var t = TweenFire(id, EaseOutQuad, TWEEN_MODE_ONCE, false, 180, 60, "score_x", score_x, window_get_width()/2,
                                                                        "score_y", score_y, window_get_height()/2 - 200,
                                                                        "score_scale", score_scale, score_scale+1);
            TweenAddCallbackUser(t, TWEEN_EV_FINISH, id, 0);                          
        }
        break;
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Ad break =)
ad_break = true;
instance_deactivate_all(true);

jc_ad_show();

alarm[1] = 5 * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Will be called after score animation is done
TweenFire(id, EaseOutQuad, TWEEN_MODE_ONCE, false, 0.0, 30, "hscore_alpha", hscore_alpha, 1);

//Highscore
if(game_score_reached){
    global._game_high_score = game_score;
    TweenFire(id, EaseOutQuad, TWEEN_MODE_PATROL, false, 0.0, 30, "hscore_scale", hscore_scale, 1.2);
    _audio_play_sound(snd_success);
    
    //Update score in GA
    //ga_addDesignEvent("game:highscore", global._game_high_score);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(ad_break){
    draw_set_alpha(1);
    draw_background_stretched(bg_rotate_background, 0, 0, window_get_width(), window_get_height());
    
    draw_set_font(fnt_jchtml5_2);
    draw_set_halign(fa_center); draw_set_valign(fa_top); draw_set_color(c_white);
    jc_draw_text(window_get_width()/2, 100, round(alarm[1]/room_speed)+"s", 1, 0);
    exit;
}

var sc = score_scale;
var ni = 2;
if(!global.DEVICE_IS_TOUCH){
    ni = 1;
    if(oGameController.game_state != game.over){
        sc = sc/2;
        
    }
    
    
}

draw_set_alpha(1);
draw_set_color(c_yellow); draw_set_font(score_font);
draw_set_halign(score_halign); draw_set_valign(fa_top);
draw_text_transformed_outline(round(score_x), round(score_y), "Score: " + string(game_score), 2, c_black, 4, sc, 0);

// Draw Ammount of power jumps
for(var i = 0; i &lt; pup_jump; i++){
    draw_sprite_ext(sprPowerJump, 0, window_get_width() - (i*ni) * sprite_get_width(sprPowerJump), 5, sc, sc, 0, c_white, 1);
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw highscore
draw_set_alpha(hscore_alpha);
draw_set_font(fnt_jchtml5_2); draw_set_halign(fa_left); draw_set_valign(fa_middle);
var tx = room_width/2 - 22;
var ty = room_height/2;

draw_sprite_ext(sprTrophy, 1, tx, ty, hscore_scale, hscore_scale, 0, c_white, hscore_alpha);
jc_draw_text(tx + 22, ty, global._game_high_score, 1, 0);

//Reset alpha
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
